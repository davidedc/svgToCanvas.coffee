<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<title>svgToCanvas.coffee</title>
	
<meta name="description" content="">
<link rel="stylesheet" href="./icons-and-styles/style.css" title="yellow" type="text/css" media="screen">
	<style id="clearly_highlighting_css" type="text/css">/* selection */ html.clearly_highlighting_enabled ::-moz-selection { background: rgba(246, 238, 150, 0.99); } html.clearly_highlighting_enabled ::selection { background: rgba(246, 238, 150, 0.99); } /* cursor */ html.clearly_highlighting_enabled {    /* cursor and hot-spot position -- requires a default cursor, after the URL one */    cursor: url("chrome-extension://pioclpoplcdbaefihamjohnefbikjilc/clearly/images/highlight--cursor.png") 14 16, text; } /* highlight tag */ em.clearly_highlight_element {    font-style: inherit !important; font-weight: inherit !important;    background-image: url("chrome-extension://pioclpoplcdbaefihamjohnefbikjilc/clearly/images/highlight--yellow.png");    background-repeat: repeat-x; background-position: top left; background-size: 100% 100%; } /* the delete-buttons are positioned relative to this */ em.clearly_highlight_element.clearly_highlight_first { position: relative; } /* delete buttons */ em.clearly_highlight_element a.clearly_highlight_delete_element {    display: none; cursor: pointer;    padding: 0; margin: 0; line-height: 0;    position: absolute; width: 34px; height: 34px; left: -17px; top: -17px;    background-image: url("chrome-extension://pioclpoplcdbaefihamjohnefbikjilc/clearly/images/highlight--delete-sprite.png"); background-repeat: no-repeat; background-position: 0px 0px; } em.clearly_highlight_element a.clearly_highlight_delete_element:hover { background-position: -34px 0px; } /* retina */ @media (min--moz-device-pixel-ratio: 2), (-webkit-min-device-pixel-ratio: 2), (min-device-pixel-ratio: 2) {    em.clearly_highlight_element { background-image: url("chrome-extension://pioclpoplcdbaefihamjohnefbikjilc/clearly/images/highlight--yellow@2x.png"); }    em.clearly_highlight_element a.clearly_highlight_delete_element { background-image: url("chrome-extension://pioclpoplcdbaefihamjohnefbikjilc/clearly/images/highlight--delete-sprite@2x.png"); background-size: 68px 34px; } } </style><style>[touch-action="none"]{ -ms-touch-action: none; touch-action: none; }[touch-action="pan-x"]{ -ms-touch-action: pan-x; touch-action: pan-x; }[touch-action="pan-y"]{ -ms-touch-action: pan-y; touch-action: pan-y; }[touch-action="scroll"],[touch-action="pan-x pan-y"],[touch-action="pan-y pan-x"]{ -ms-touch-action: pan-x pan-y; touch-action: pan-x pan-y; }
  .indentedLine {
      margin-left: 2em;
      margin-bottom: 1em;
  }
  .rowTitle {
      margin-top: 1em;
  }
  textArea {
      width: 100%;
  }
  #countdown {
    text-align: center;
    font-size: large;
    background-color: black;
    color: white;
  }
  </style>


  <script type="text/javascript" src="StackBlur.js"></script>
  <script type="text/javascript" src="canvg.js"></script>
  <script type="text/javascript">
    function q(k) {
      var qs = window.location.search.substring(1);
      var t = qs.split("&");
      for (i=0;i<t.length;i++) {
        kv = t[i].split("=");
        if (kv[0] == k) return unescape(kv[1]).replace('+',' ');
      }   
      return null;
    }   

    var examplesTable = [];
    examplesTable.push(['tiger', '23.svg', 'tiger_64x64.png']);
    examplesTable.push(['football', '1.svg', 'football_64x64.png']);
    examplesTable.push(['world', '22.svg', 'world_64x64.png']);
    examplesTable.push(['butterfly', '25.svg', 'butterfly_64x64.png']);
    examplesTable.push(['floorplan', '26.svg', 'floorplan_64x64.png']);
    examplesTable.push(['all', '2.svg', 'all_64x64.png']);
    examplesTable.push(['layers', '8.svg', 'layers_64x64.png']);


    examplesTable.push(['layers', '10.svg', 'line_64x64.png']);
    examplesTable.push(['layers', '11.svg', 'poly_64x64.png']);
    examplesTable.push(['layers', '13.svg', 'path_64x64.png']);
    examplesTable.push(['layers', '15.svg', 'curve_64x64.png']);
    examplesTable.push(['layers', '27.svg', 'arcs_64x64.png']);
    examplesTable.push(['layers', '29.svg', 'markers_64x64.png']);

    examplesTable.push(['layers', '16.svg', 'linear_64x64.png']);
    examplesTable.push(['layers', '18.svg', 'radial_64x64.png']);
    examplesTable.push(['layers', '19.svg', 'radialFocus_64x64.png']);
    examplesTable.push(['layers', '30.svg', 'pattern_64x64.png']);
    examplesTable.push(['layers', '34.svg', 'transform_64x64.png']);

    examplesTable.push(['layers', '20.svg', 'indefinite_64x64.png']);
    examplesTable.push(['layers', '21.svg', 'multiple_64x64.png']);

    examplesTable.push(['layers', '35.svg', 'glyphs_64x64.png']);
    examplesTable.push(['layers', '24.svg', 'units_64x64.png']);
    examplesTable.push(['layers', '28.svg', 'viewport_64x64.png']);
    examplesTable.push(['layers', '31.svg', 'links_64x64.png']);
    examplesTable.push(['layers', '32.svg', 'images_64x64.png']);
    examplesTable.push(['layers', 'filters-gauss-01-b.svg', 'blurFilter_64x64.png']);

    // http://www.w3.org/TR/SVG/text.html#TSpanElement
    examplesTable.push(['issue187', 'issue187.svg', 'innerTspan_64x64.png']);
    examplesTable.push(['issue195', 'issue195.svg', 'feColorMatrixGrayscale_64x64.png']);
    examplesTable.push(['issue195', 'issue202.svg', 'issue202-textAnchorMiddle-radialArcsGraph_64x64.png']);
    examplesTable.push(['issue195', 'issue202b.svg', 'issue202-textAnchorMiddle-lineGraph_64x64.png']);
    examplesTable.push(['issue99', 'issue99.svg', 'issue99-tspanOffset_64x64.png']);
    examplesTable.push(['issue94', 'issue94.svg', 'issue94-VisibilityAttribute_64x64.png']);
    examplesTable.push(['issue88', 'issue88.svg', 'issue88-centeredText_64x64.png']);
    examplesTable.push(['issue82', 'issue82.svg', 'issue82-externalFont_64x64.png']);
    examplesTable.push(['issue114', 'issue114.svg', 'issue114-textAnchor_64x64.png']);
    examplesTable.push(['issue134', 'issue134.svg', 'issue134-positioning_64x64.png']);
    examplesTable.push(['issue52', 'issue52.svg', 'issue52-strokeDashSupport_64x64.png']);
    examplesTable.push(['issue142', 'issue142.svg', 'issue142-strokeDashSupport_64x64.png']);
    examplesTable.push(['issue183', 'issue183.svg', 'issue183-mask_64x64.png']);
    examplesTable.push(['issue184', 'issue184.svg', 'issue184-transformedPattern_64x64.png']);
    examplesTable.push(['issue227', 'issue227.svg', 'issue227-clipPathTransform_64x64.png']);
    examplesTable.push(['issue76', 'issue76.svg', 'issue76-fillRuleEvenOdd_64x64.png']);

    examplesTable.push(['issue229', 'issue229.svg', 'issue229-textAnchor_64x64.png']);
    examplesTable.push(['issue231', 'issue231.svg', 'issue231-clipping_64x64.png']);
    examplesTable.push(['issue241', 'issue241.svg', 'issue241-feColorMatrix_64x64.png']);

    examplesTable.push(['issue234', 'issue234.svg', 'issue234-useSymbol_64x64.png']);
    examplesTable.push(['issue234b', 'issue234b.svg', 'issue234b-useSymbol_64x64.png']);
    examplesTable.push(['issue234c', 'issue234c.svg', 'issue234c-useSymbol_64x64.png']);
    examplesTable.push(['issue234d', 'issue234d.svg', 'issue234d-useSymbol_64x64.png']);
    examplesTable.push(['issue234e', 'issue234e.svg', 'issue234e-useSymbol_64x64.png']);

    examplesTable.push(['issue244', 'issue244.svg', 'issue244-textBaseline_64x64.png']);
    examplesTable.push(['issue238', 'issue238.svg', 'issue238-clipContextFFStroke_64x64.png']);


    var lastLoadedThumbnail = 0
    function loadFromThumbnail() {
      debugger
      //document.getElementById("theSVGImage").onLoad = svgImageLoaded;
      //document.getElementById("theSVGImage").addEventListener('load', svgImageLoaded);
      //document.getElementById("theSVGImage").src = "svgs/"+examplesTable[lastLoadedThumbnail][1];

            var object = document.createElement("object");
            object.setAttribute("id", "svgObject");
            object.type = "image/svg+xml";
            object.data = "svgs/"+examplesTable[lastLoadedThumbnail][1];
             document.getElementById("theSVGDiv").innerHTML = "";
            document.getElementById("theSVGDiv").appendChild(object);
            object.removeAttribute("");
            object.width = "100%";
            // cheap version of "onload" here
            setTimeout(svgImageLoaded,200);

    }

    function createfunc(k) {
        return function() {
          lastLoadedThumbnail = k;
          loadFromThumbnail();
        };
    }


    var context;
    function bodyonload() {
      debugger;
      context = document.getElementById('canvas').getContext('2d'); 
      var qUrl = q('url'); if (qUrl != null && qUrl != '') { resetCanvas(); canvg('canvas', qUrl); }
      var qSvg = q('svg'); if (qSvg != null && qSvg != '') { resetCanvas(); canvg('canvas', qSvg); }      
      resetCanvas();

      debugger;
      var img;
      for (j = 0, len = examplesTable.length; j < len; j++) {
        i = examplesTable[j];

        lastLoadedThumbnail = j;
        img= new Image();
        img.src= "svg-thumbnails/"+i[2];
        img.style.width = "32px";
        img.style.height = "32px";
        img.style.cssFloat = "left";
        img.style.cursor = "pointer";
        img.className = " thumbnailImage";



        img.onclick = createfunc(j);
        //if (alt!=null) img.alt= alt;
        //if (title!=null) img.title= title;

        document.getElementById("thumbnails").appendChild(img);

      }

    }

    function render() {
      var c = document.getElementById('canvas');
      if (context) c.getContext = context;
      canvg(c, document.getElementById('svg').value);
    }
    function resetCanvas() {
      var c = document.getElementById('canvas');
      var theSVGDiv = document.getElementById('theSVGDiv');
      //c.width = 400;
      //c.height = 400;
      c.style.width  = theSVGDiv.clientWidth + "px"
      c.style.height = theSVGDiv.clientHeight + "px"
      c.width  = theSVGDiv.clientWidth
      c.height = theSVGDiv.clientHeight
      context = c.getContext('2d');
      context.setTransform(1, 0, 0, 1, 0, 0);
      context.clearRect(0, 0, c.width, c.height);
      canvg('canvas', 'svgs/25.svg', {ignoreSVGMouse: true, scaleWidth: c.width, ignoreDimensions: true});
      
    }

    window.getDevicePixelRatio = function () {
        var ratio = 1;
        // To account for zoom, change to use deviceXDPI instead of systemXDPI
        if (window.screen.systemXDPI !== undefined && window.screen.logicalXDPI       !== undefined && window.screen.systemXDPI > window.screen.logicalXDPI) {
            // Only allow for values > 1
            ratio = window.screen.systemXDPI / window.screen.logicalXDPI;
        }
        else if (window.devicePixelRatio !== undefined) {
            ratio = window.devicePixelRatio;
        }
        return ratio;
    };

    function svgImageLoaded() {
      debugger
      


      var c = document.getElementById('canvas');
      var theSVGDiv = document.getElementById('theSVGDiv');

      var svgElem = document.getElementById("svgObject").contentDocument.children[0];
      var bbox = svgElem.getBBox();
      console.log("bbox:");
      console.log(bbox);
      var zoom = document.getElementById("svgObject").clientWidth / (bbox.width + bbox.x)
      //alert("scale: " + zoom);
      if (zoom >= 1) {
        zoom = 1;
        bbox.height = document.getElementById("svgObject").clientHeight
        bbox.y = 0
        bbox.width = document.getElementById("svgObject").clientWidth
        bbox.x = 0
      }

//c.parentNode.style.height = ((bbox.height + bbox.y) * zoom) + "px";

/*
c.style.transform = 'scale(' + zoom + ')';
c.style['-o-transform'] = 'scale(' + zoom + ')';
c.style['-webkit-transform'] = 'scale(' + zoom + ')';
c.style['-moz-transform'] = 'scale(' + zoom + ')';

c.style.transformOrigin = '0 0';
*/

/*
svgElem.style.transform = 'scale(' + zoom + ')';
svgElem.style['-o-transform'] = 'scale(' + zoom + ')';
svgElem.style['-webkit-transform'] = 'scale(' + zoom + ')';
svgElem.style['-moz-transform'] = 'scale(' + zoom + ')';
*/

svgElem.style.zoom = zoom;
document.getElementById("svgObject").parentNode.style.height = ((bbox.height + bbox.y) * zoom) + "px";
document.getElementById("svgObject").height = ((bbox.height + bbox.y) * zoom) + "px";

      //c.width = 400;
      //c.height = 400;
      c.style.width  = ((bbox.width + bbox.x)*zoom) + "px"
      c.style.height = ((bbox.height + bbox.y)*zoom) + "px"
      c.width  = ((bbox.width + bbox.x)*zoom) * window.getDevicePixelRatio();
      c.height = ((bbox.height + bbox.y)*zoom) * window.getDevicePixelRatio();
      context = c.getContext('2d');
      //context.setTransform(1, 0, 0, 1, 0, 0);
      //context.clearRect(0, 0, c.width, c.height);
      //alert("c.width: " + c.width);
      canvg('canvas', "svgs/"+examplesTable[lastLoadedThumbnail][1], {ignoreSVGMouse: true, scaleWidth: c.width, ignoreDimensions: true});
    }


  </script>


</head>


<body onload="bodyonload();">

<div id="sidebar" style="float: right; padding-right:15px;">
  <div id="sidebarTitle"><span class="text">Get it</span></div>
  <p><a href="https://github.com/davidedc/svgToCanvas.coffee" style="text-decoration: none;"><img src="./icons-and-styles/github-icon.png" width="32" height="32" style="border: 0;"></a></p>

  <div id="sidebarTitle"><span class="text">Comment</span></div>
  <ul>
    <li><a href="https://github.com/davidedc/svgToCanvas.coffee/issues">Here</a></li>
  </ul>

  <div id="sidebarTitle"><span class="text">Sections</span></div>
  <ul>
    <li><a href="#Goodfor" title="good for...">What is it good for?</a></li>
    <li><a href="#WhyCoffeescript" title="why coffeescript">Why Coffeescript?</a></li>
  </ul>


  <div id="sidebarTitle"><span class="text">Follow on twitter</span></div>
  <ul>
    <li><a href="https://twitter.com/davidedc">Davide Della Casa</a></li>
  </ul>
  <div id="sidebarTitle"><span class="text">Credits</span></div>

  <ul><strong><a href="https://github.com/gabelerner/canvg">Canvg project</a></strong> by <strong><a href="https://github.com/gabelerner">Gabe Lerner</a></strong>.</ul>

  <ul>Page theme: <strong><a href="http://www.behance.net/p41studios">Angebot by P41 Studios</a></strong> (via <strong><a href="http://i-am-glow.com/">I am glow</a></strong> project.)</ul>

</div> <!--- sidebar -->

<div id="grid_hold">

<div id="header">
  <div id="title"><span class="blog_title">svgToCanvas.coffee</span></div>
  <div id="about">
  	
      svgToCanvas.coffee is a coffeescript port (with minor edits) of the <a href="https://github.com/gabelerner/canvg">canvg</a> project by <a href="https://github.com/gabelerner">Gabe Lerner</a>. It visualizes .svg vector files using the HTML5 canvas "low level" graphics API (and, in the process, it rasterizes them in case that's also useful to you).

  </div>
  <div id="thumbnails" style="width: 70%;">
  </div>

</div>

<div id="content_hold" style="clear: left; margin-top:1em;" >

<div style="border: 1px solid gray; width: 47%; float: left; margin-bottom:3em;">
      <canvas id="canvas" width="100%"></canvas>
</div>

<div id="theSVGDiv" style="border: 1px solid gray; width: 47%; float: left; margin-left: 2%; margin-bottom:3em;">
  <img id="theSVGImage" src="svgs/25.svg" width="100%" />
</div>

		
	<a id="Goodfor"><h1>What is this good for?</h1></a>	
	<div id="content">
    <p>Implementations of "low level" Canvas primitives (say, draw a line or fill a path) are quite consistent and stable across browsers. On the other hand, SVG is large and complex format, and SVG implementations vary quite a lot and can produce <a href="https://en.wikipedia.org/wiki/Comparison_of_layout_engines_(Scalable_Vector_Graphics)#SVG_1.1_support">very</a> <a href="http://viziblr.com/news/2011/5/10/inline-svg-rendering-comparison-revisited-ndash-chrome-firef.html">different</a> <a href="http://blogs.msdn.com/b/saveenr/archive/2010/03/21/getting-started-with-svg-an-example-driven-exploration-of-basic-svg-usage-in-xhtml.aspx">results</a> for even simple files. So, this renderer might be useful to <i>consistently visualize</i> SVG files, or to <i>consistently rasterize</i> them: even if this renderer is slightly off, at least glitches can be consistently dealt with.</p>

    <p>You might find useful the rasterization part, say, to apply raster filters on your svgs, or for input to other library/system expecting raster input.</p>

    <p>...or you might have the odd itch to hack/play with the rasterizer just for kicks or for custom fixes/extensions.</p>

    <p><strong>Note:</strong> if you just want to rasterize an SVG and you are not concerned with older browser versions or cross-browser differences, you can <i>attempt</i> <a href="http://stackoverflow.com/a/3769883">this simple way</a> to do <i>just</i> that with Canvas - although it seems <a href="http://jsfiddle.net/Na6X5/548/">buggy</a> in many cases.</p>




	</div>



  <a id="WhyCoffeescript"><h1>Why a coffeescript version?</h1></a> 
  <div id="content">
    <p>Maybe personal taste, or maybe for consistency with an existing system/framework/dev process.</p>
  </div>




	</div> <!--- content hold-->


</div> <!--- grid hold-->



</body></html>